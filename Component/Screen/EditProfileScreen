import React, { useState } from 'react';
import { View, Text, TextInput, Image, Button, StyleSheet, TouchableOpacity } from 'react-native';
import * as ImagePicker from "expo-image-picker";

const EditProfileScreen = () => {
    const [image, setImage] = useState(null);
    const [fullName, setFullName] = useState("");
    const [email, setEmail] = useState("");
  
    const handleImagePicker = async () => {
      let result = await ImagePicker.launchImageLibraryAsync({
        mediaTypes: ImagePicker.MediaTypeOptions.All, // We can  specify whether we need only Images or Videos
        allowsEditing: true,
        aspect: [1, 1],
        quality: 1, // 0 means compress for small size, 1 means  compress for maximum quality
      });
  
      console.log(result.assets[0].uri);
  
      if (!result.canceled) {
        setImage(result.assets[0].uri);
        //   const response = await fetch(result.assets[0].uri);
        //   const blob = await response.blob();
        //   setblob(blob)
      }
    };
  

  const handleSaveProfile = async () => {
    try {
      const storageRef = firebase.storage().ref().child(`profileImages/${Date.now()}`);
      const imageSnapshot = await storageRef.putFile(image.uri);
      const imageUrl = await imageSnapshot.ref.getDownloadURL();

      const userRef = firebase.database().ref('users').push();
      await userRef.set({
        nickname,
        phoneNumber,
        profileImage: imageUrl,
      });

      console.log('Profile data saved successfully.');
    } catch (error) {
      console.error('Error saving profile data:', error);
    }
  };

  return (
    <View style={styles.container}>
      <TouchableOpacity onPress={handleImagePicker}>
        {image ? (
          <Image source={{ uri: image.uri }} style={styles.image} />
        ) : (
          <View style={styles.placeholderImage}>
            <Text>Select Image</Text>
          </View>
        )}
      </TouchableOpacity>
      <TextInput
        style={styles.input}
        placeholder="Nickname"
        value={nickname}
        onChangeText={setNickname}
      />
      <TextInput
        style={styles.input}
        placeholder="Phone Number"
        value={phoneNumber}
        onChangeText={setPhoneNumber}
      />
      <Button title="Save Profile" onPress={handleSaveProfile} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  image: {
    width: 100,
    height: 100,
    borderRadius: 50,
    marginBottom: 20,
  },
  placeholderImage: {
    width: 100,
    height: 100,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: 'gray',
    borderRadius: 50,
    marginBottom: 20,
  },
  input: {
    width: '80%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 20,
    paddingHorizontal: 10,
  },
});

export default ProfileScreen;
